define(function(){function e(e,n,r,a){return new t(e,n,r,a)}var t=function(){var e=function(e,t,n,r){function a(t){return e.manager().executeQuery(t.using(r||breeze.FetchStrategy.FromServer)).then(function(e){return e.results})}function i(t){return e.manager().executeQueryLocally(t)}function o(){return s().metadataStore}function s(){return e.manager()}function l(e,t){if(!e.entityType||e.entityType.shortName!==t)throw new Error("Object must be an entity of type "+t)}var c;t&&(c=o().getEntityType(t),c.setProperties({defaultResourceName:n}),o().setEntityTypeForResourceName(n,t)),this.withId=function(e){if(!t)throw new Error("Repository must be created with an entity type specified");return s().fetchEntityByKey(t,e,!0).then(function(e){if(!e.entity)throw new Error("Entity not found!");return e.entity})},this.find=function(e){var t=breeze.EntityQuery.from(n).where(e);return a(t)},this.findInCache=function(e){var t=breeze.EntityQuery.from(n).where(e);return i(t)},this.all=function(){var e=breeze.EntityQuery.from(n);return a(e)},this.create=function(e){var n=s().createEntity(t,e);return n},this.delete=function(e){l(e,t),e.entityAspect.setDeleted(e)}};return e}();return{create:e,getCtor:t}});